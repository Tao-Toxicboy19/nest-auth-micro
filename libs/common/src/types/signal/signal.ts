// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.174.0
//   protoc               v5.26.1
// source: proto/signal.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "signal";

export interface SignalResponse {
  positions: string;
}

export interface SignalDto {
  ema: number;
  symbol: string;
  timeframe: string;
}

export const SIGNAL_PACKAGE_NAME = "signal";

export interface SignalServiceClient {
  ema(request: SignalDto): Observable<SignalResponse>;

  cdcActionZone(request: SignalDto): Observable<SignalResponse>;
}

export interface SignalServiceController {
  ema(request: SignalDto): Promise<SignalResponse> | Observable<SignalResponse> | SignalResponse;

  cdcActionZone(request: SignalDto): Promise<SignalResponse> | Observable<SignalResponse> | SignalResponse;
}

export function SignalServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["ema", "cdcActionZone"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("SignalService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("SignalService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const SIGNAL_SERVICE_NAME = "SignalService";
